-----------------------------------
AVSimulation SCANeRstudio for Linux
-----------------------------------

Tested platforms: Ubuntu 20.04 LTS x64, CentOS 7.9 x64

Introduction
============
Two kinds of Linux installations are available:

Shared
......
SCANeRstudio is installed on a Windows PC with supervisor and some modules are running with Linux computers
In that case you have to:
- install the SCANeRstudio-2022.1-r8_AddOn_Linux-r0.0.exe on the supervisor Windows PC to add Linux binaries
- mount the AVSimulation Windows shared folder on the Linux computer (https://wiki.ubuntu.com/MountWindowsSharesPermanently)

Standalone
..........
SCANeRstudio is installed standalone on a Linux computer (without GUI, only runtime modules)
In that case you have to:

- untar the provided SCANeRstudio_2022.1-r8.tar.bz2
  
  tar xvf 'SCANeRstudio_2022.1-r8.tar.bz2'
  cd AVSimulation

- On first installation you have to create a first configurations.cfg in the AVSimulation folder.
  
   mv configurations_default-2022.cfg configurations.cfg

Computer setup for first Installation
=====================================

Dependency installation
.......................
To execute SCANeRstudio, some packages must be installed:
  
 - On Ubuntu :  
     sudo apt-get install -y lsb-core swig libxerces-c3.2 libtinyxml2.6.2v5 libopenal1 libgdal26 libqt5xml5 libegl1
     sudo apt-get install -y libqt5script5 libqt5multimediawidgets5 freeglut3 libxqilla6v5 libsdl2-dev libfftw3-3 libpython2.7 libglew2.1 libpython3.8 libqt5quick5 libqwt-qt5-6 
     sudo apt-get install -y libproj-dev libbullet2.88 libpocofoundation62 libpoconet62 libpocojson62 libboost-python1.71 libboost-regex1.71 libboost-chrono1.71 libboost1.71 libboost-system1.71
     sudo apt-get install -y libogg0 libvorbis0a libmatio9 libpcap0.8 libexif12 libprotobuf17 libglu1-mesa libopengl0 libopencv-core4.2 libopencv-highgui4.2 libopencv-imgcodecs4.2 libopencv-imgproc4.2 libpcrecpp0v5
	 sudo apt-get install -y libqt5webenginewidgets5 libfreeimage3 python3-crypto

  - On CentOs 7:
     sudo yum install -y epel-release
     sudo yum install -y redhat-lsb-core xerces-c freeglut xqilla openal libGLU tinyxml SDL2 fftw3 qt5-qtscript qt5-qtmultimedia python3-libs libGLEW qt5-qtsvg proj-devel minizip bullet 
     sudo yum install -y expat sqlite curl postgresql libwebp libxml2 xz netcdf zlib jasper-libs
     sudo yum install -y boost169 boost169-python3 libglvnd-opengl libogg libvorbis matio libpcap libexif harfbuzz freetype
     sudo yum localinstall -y 'SCANeRstudio_2022/third party/protobuf-3.6.1-4.el7.x86_64.rpm'

To use the SDK and compile samples, the following packages are also needed:

 - On Ubuntu : 
     sudo apt-get install cmake build-essential libopencv-dev libxerces-c-dev
 
 - On CentOs 7 (Use GCC8):
	 # Install of gcc8 toolset
	 sudo yum install -y centos-release-scl
	 sudo yum install -y devtoolset-8-gcc devtoolset-8-gcc-c++
     sudo yum install -y make cmake opencv-devel xerces-c-devel
	 # To switch to GCC8 toolset (need for each new shell):
	 scl enable devtoolset-8 -- bash

To Install dotnet:

 - On Ubuntu : 
   wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
   sudo dpkg -i packages-microsoft-prod.deb
   sudo apt-get update; \
   sudo apt-get install -y apt-transport-https && \
   sudo apt-get update && \
   sudo apt-get install -y dotnet-sdk-5.0

 - On CentOs 7:
   sudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm
   sudo yum install dotnet-sdk-5.0

You can find this installation information on the web site: https://docs.microsoft.com/fr-fr/dotnet/core/install/

Open Firewall port for SCANeRstudio
...................................
 - On CentOS:
    firewall-cmd --permanent --zone=public --add-port={12000-12005/udp,18000/udp,25099-25300/udp,63999-64000/udp,64100-64300/udp,9090-9092/tcp}
    firewall-cmd --reload


License installation
..............................................................................
Install Sentinel LDK package in third party:
(Not mandatory if using networked licenses)

1. Untar $STUDIO_PATH/SCANeRstudio_XXXX/third party/aksusbd-X.YY.Z.tar
    $ tar xvf $STUDIO_PATH/SCANeRstudio_2021/third party/aksusbd-8.23.1.tar -C /tmp
     
2. Move to folder **aksusbd-X.YY.Z**
    $ cd /tmp/aksusbd-8.23.1
    
3. Start installer with admin rights
    $ sudo ./dinst**
    
Opening a browser on http://localhost:1947 should open "Sentinel Admin Control Center"

Executing SCANeRstudio
=======================

Go to AVSimulation (mount from Windows PC or AVSimulation) folder and source the setenv script to set environnement variables:
. ./setenv.sh SCANeRstudio_2022

Useful tools (with GUI)
.......................
- Edit SCANeR configuration: SCANeRconfigurator
- Edit License settings : SCANeRLicMgr

Shared installation
...................
start the Daemon: SCANeRstudioDaemon

Standalone installation
.......................
To launch SCANeRstudio as standalone runtime with a test scenario:
cd SCANeRstudio_2022/APIs/samples/ScanerAPI/python
./launch.py -c "DEFAULT_2022" -u Studio_3DObjects

Compiling APIs samples
......................
Only a few ScanerAPI samples are ready to be used on Linux.
To compile them, go to SCANeRstudio_2022/APIs and execute
cmake .
make

Using SCANeRstudio headless (HPC application)
.......................................
Standard SCANeRstudio is built to use X11 server for OpenGL application. An alternate library is provided to use EGL for OpenGL with GPU acceleration (only headless)
For running SCANeRstudio on compute nodes without X11 server, please follow the following procedure:
> cd SCANeRstudio_2022/bin/Linux/ubuntu/20.04/lib/external/
or
> cd SCANeRstudio_2022/bin/Linux/centos/7/lib/external/
or
> cd SCANeRstudio_2022/bin/Linux/centos/8/lib/external/

> mv libosgViewer.so.162 libosgViewerX11.so.162
> ln -s libosgViewerEGL.so.162 libosgViewer.so.162

In this configuration with multiple GPU, you can choose the GPU with the environment variable: OSG_EGL_DEV=<num dev starting from 0>

To go back to X11
> rm libosgViewer.so.162
> ln -s libosgViewerX11.so.162 libosgViewer.so.162

